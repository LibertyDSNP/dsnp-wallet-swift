version: 2.1

orbs:
  slack: circleci/slack@4.12.0

commands: # a reusable command with parameters
  send_slack_message:
    parameters:
      icon: 
        default: ":large_blue_circle:"
        type: string
      message:
        default: "No Message were provided"
        type: string
      event: # always, fail
        default: "always"
        type: string  
    steps:
      - slack/notify:
          custom: >
            {
               "blocks": [
                {
                  "type": "section",
                  "text": {
                      "type": "mrkdwn",
                      "text": "<<parameters.icon>> <<parameters.message>>"
                  }
                }
              ]
            } 
          event: <<parameters.event>>
          channel: ios-ci-alerts

jobs:
  # swiftlint-docker:
  #  docker:
  #    - image: dantoml/swiftlint:latest
  #  steps:
  #    - checkout
      # Run SwiftLint
  #    - run:
  #        name: Run SwiftLint
  #        command: |
  #          swiftlint lint --path DSNP-Wallet/Source/
      # Use the line bellow if you need xml report
      # - run: swiftlint lint --reporter junit | tee result.xml
  #    - store_artifacts:
  #        path: result.xml
  #    - store_test_results:
  #        path: result.xml

  build-simulator-app-center:
    macos:
      xcode: 14.0.1 
    parameters: # parameters are at the job level
      build_env:
        type: string
        default: "dev" 
      build_version:
        type: string
        default: "1"  
    
    steps:
      - send_slack_message: 
          event: "always"
          message: "Building an app for simulator... \\n *Git Branch*: $CIRCLE_BRANCH \\n *Launch trigger*: $CIRCLE_USERNAME"
      - checkout
      - run:
          name: Install dependecies
          command: |
            cd DSNP-Wallet
            pod install
      - run:
          name: Build an app for simulator
          command: fastlane build_app_for_simulator
      - run:
          name: Archiving the binary app
          command: fastlane zip_simulator_bin 
      - run:
          name: Upload build file for app center 
          command: |
            fastlane add_plugin appcenter
            fastlane appcenter_upload_sim_app  build_version:"<<parameters.build_version>>" env:"<<parameters.build_env>>"
      
      - run:
          name: Launch Smoke Test 
          command: |
            curl --location --request POST "https://circleci.com/api/v2/project/gh/AmplicaLabs/ios-testing/pipeline" \
            --header "Content-Type: application/json" \
            --header "Circle-Token: $IOS_TEST_CIRCLEKEY" \
            --data-raw "{\"branch\": \"main\", \"parameters\": { \"app_env\": \"<<parameters.build_env>>\"}}"
      - send_slack_message: #"If all steps has passed"
          event : "pass" 
          icon: ":large_green_circle:"
          message: "The *<<parameters.build_env>>* app for simulator has been uploaded to App Center successfully"  
      - send_slack_message: #"If atleast one step has failed"
          event : "fail"  
          icon: ":red_circle:"
          message: "The Circle Ci job 'build-simulator-app-center' has failed when building *<<parameters.build_env>>* env !\\n 
          *Ci Build URL*: $CIRCLE_BUILD_URL"    
  
  build-app-center:
    macos:
      xcode: 14.2.0
    resource_class: macos.x86.medium.gen2
    parameters: # parameters are at the job level
      build_env:
        type: string
        default: "dev" 
      build_version:
        type: string
        default: "1"  
    
    steps:
      - send_slack_message: 
          event: "always"
          message: "Building an app for a real device... \\n *Git Branch*: $CIRCLE_BRANCH \\n *Launch trigger*: $CIRCLE_USERNAME"
      - checkout
      - run:
          name: Install dependecies
          command: |
            cd DSNP-Wallet
            pod install
      
      - run:
          name: Pull profiles and build app
          command: |
            fastlane make_ios_cert
            fastlane build_for_ios
      - run:
          name: Upload the binary to app center 
          command: |
            fastlane add_plugin appcenter
            fastlane appcenter_upload_app  build_version:"<<parameters.build_version>>" env:"<<parameters.build_env>>"
      - send_slack_message: #"If all steps has passed"
          event : "pass" 
          icon: ":large_green_circle:"
          message: "The *<<parameters.build_env>>* app for the real device has been uploaded to App Center successfully"  
      - send_slack_message: #"If atleast one step has failed"
          event : "fail"  
          icon: ":red_circle:"
          message: "The Circle Ci job 'build-app-center' has failed when building *<<parameters.build_env>>* env!\\n 
          *Ci Build URL*: $CIRCLE_BUILD_URL"
              
workflows:
  version: 2
  pr_workflow:
    jobs:
     # - swiftlint-docker:
     #     filters:
     #       branches:
     #         ignore:
     #           - dev
  
  build_and_deploy_to_dev:
    jobs:
      - build-simulator-app-center:
          build_env: dev
          filters:
            branches:
              only:
                - dev
      - build-app-center:
          build_env: dev
          filters:
            branches:
              only:
                - dev
  
  build_and_deploy_to_stg:
    jobs:
      - build-simulator-app-center:
          build_env: stg
          filters:
            tags:
              only: /^(v)?[\w\d]+\.\d+\.\d+$/
            branches:
              only:
              - /^(?!.*\/v[\w\d]+\.\d+\.\d+)/                       
      - build-app-center:
          build_env: stg
          filters:
            tags:
              only: /^(v)?[\w\d]+\.\d+\.\d+$/
            branches:
              only:
              - /^(?!.*\/v[\w\d]+\.\d+\.\d+)/                 